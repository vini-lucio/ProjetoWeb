# Generated by Django 5.1 on 2025-01-08 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0051_remove_unidades_chave_migracao'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Produtos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado Em')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado Em')),
                ('chave_analysis', models.IntegerField(verbose_name='ID Analysis')),
                ('nome', models.CharField(max_length=70, verbose_name='Nome')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
                ('multiplicidade', models.DecimalField(decimal_places=4, default=0, max_digits=8, verbose_name='Multiplicidade')),
                ('tipo_embalagem', models.CharField(blank=True, choices=[('PLASTICO', 'Plastico'), ('RAFIA', 'Rafia'), ('OUTROS', 'Outros')], max_length=20, null=True, verbose_name='Tipo Embalagem')),
                ('medida_embalagem_x', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Medida Embalagem X (m)')),
                ('medida_embalagem_y', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Medida Embalagem Y (m)')),
                ('quantidade_volume', models.DecimalField(decimal_places=4, default=0, max_digits=8, verbose_name='Quantidade Por Volume')),
                ('medida_volume_padrao', models.BooleanField(default=False, help_text='Ao marcar esse campo será preenchido as medidas do volume de acordo com o definido em Site Setup', verbose_name='Medida Volume Padrão')),
                ('medida_volume_x', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Medida Volume X (m)')),
                ('medida_volume_y', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Medida Volume Y (m)')),
                ('medida_volume_z', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Medida Volume Z (m)')),
                ('m3_volume', models.DecimalField(decimal_places=4, default=0, max_digits=7, verbose_name='m³ do Volume')),
                ('peso_liquido', models.DecimalField(decimal_places=4, default=0, max_digits=8, verbose_name='Peso Liquido (kg)')),
                ('peso_bruto', models.DecimalField(decimal_places=4, default=0, max_digits=8, verbose_name='Peso Bruto (kg)')),
                ('ean13', models.CharField(blank=True, max_length=13, null=True, verbose_name='Codigo de Barras EAN13')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo')], default='ativo', max_length=10, verbose_name='Status')),
                ('aditivo_percentual', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='% Aditivo (cor)')),
                ('prioridade', models.DecimalField(decimal_places=0, default=0, max_digits=4, verbose_name='Prioridade')),
                ('chave_migracao', models.IntegerField(blank=True, null=True, verbose_name='Chave Migração')),
                ('atualizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_atualizado_por', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado Por')),
                ('criado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_criado_por', to=settings.AUTH_USER_MODEL, verbose_name='Criado Por')),
                ('modelo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s', to='home.produtosmodelos', verbose_name='Modelo')),
                ('unidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s', to='home.unidades', verbose_name='Unidade')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'constraints': [models.UniqueConstraint(fields=('chave_analysis',), name='produtos_unique_chave_analysis', violation_error_message='Chave Analysis é campo unico'), models.UniqueConstraint(fields=('nome',), name='produtos_unique_nome', violation_error_message='Nome é campo unico'), models.CheckConstraint(condition=models.Q(('multiplicidade__gte', 0)), name='produtos_check_multiplicidade', violation_error_message='Multiplicidade precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('medida_embalagem_x__gte', 0)), name='produtos_check_medida_embalagem_x', violation_error_message='Medida Embalagem X precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('medida_embalagem_y__gte', 0)), name='produtos_check_medida_embalagem_y', violation_error_message='Medida Embalagem Y precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('quantidade_volume__gte', 0)), name='produtos_check_quantidade_volume', violation_error_message='Quantidade por Volume precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('medida_volume_x__gte', 0)), name='produtos_check_medida_volume_x', violation_error_message='Medida Volume X precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('medida_volume_y__gte', 0)), name='produtos_check_medida_volume_y', violation_error_message='Medida Volume Y precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('medida_volume_z__gte', 0)), name='produtos_check_medida_volume_z', violation_error_message='Medida Volume Z precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('m3_volume__gte', 0)), name='produtos_check_m3_volume', violation_error_message='m³ do Volume precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('aditivo_percentual__gte', 0)), name='produtos_check_aditivo_percentual_0', violation_error_message='Aditivo Percentual precisa ser maior ou igual a 0'), models.CheckConstraint(condition=models.Q(('aditivo_percentual__lte', 100)), name='produtos_check_aditivo_percentual_100', violation_error_message='Aditivo Percentual precisa ser menor ou igual a 100'), models.CheckConstraint(condition=models.Q(('prioridade__gte', 0)), name='produtos_check_prioridade', violation_error_message='Prioridade precisa ser maior ou igual a 0')],
            },
        ),
    ]
